server:
  port: 39061
  netty:
    connection-timeout: 3000

logging:
  config: classpath:logback-spring.xml

spring:
  application:
    name: "URL-TRACKING"
  main:
    web-application-type: reactive
    lazy-initialization: true
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 1
    #    lettuce:
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
      shutdown-timeout: 100ms

  kafka:
    bootstrap-servers: "127.0.0.1:9092"
    producer:
      retries: 0
      batch-size: 20000
      compression-type: gzip
      # Custom setting - batch 요청을 위한 버퍼링 시간. batch-size에 다다르면 즉시 메시지를 전송한다.
      linger-ms: 50
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: url-tracking
      enable-auto-commit: false
      max-poll-records: 500
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      concurrency: 5
      poll-timeout: 3000
      # Custom setting - batch listener
#      type: single
      batch: false
      # Custom setting - auto startup listener
      auto-startup: true
      ack-mode: manual_immediate
      log-container-config: on
      missing-topics-fatal: false
    # Custom setting - retries
    retry:
      # 재시도 횟수 10회
      max-attempts: 10
      # 1초부터 시작
      initial-interval: 1000
      # 2의 배수 1, 2, 4, 8, ... max-interval, max-interval ...
      multiplier: 2
      # 최대 10초
      max-interval: 10000

uracker:
  # default ttl (default: 30일, 단위: seconds)
  ttl: 2592000
  topics:
    hist-target:
      - hist-target-01
      - hist-target-02
    report:
      - report-01
      - report-02